(self.webpackChunkmp_webgl=self.webpackChunkmp_webgl||[]).push([[62],{98062:(t,i,e)=>{"use strict";e.r(i),e.d(i,{default:()=>Plugin});var n=e(57956),s=e(22819),o=e(97542),a=e(73339);class Plugin extends o.Y{constructor(){super(...arguments),this.name="plugin",this.data=new a.e}async init(t,i){let e;if([this.ses,this.sdk,e]=await Promise.all([i.getModuleBySymbol(n.y.SES),i.getModuleBySymbol(n.y.SDK),i.getModuleBySymbol(n.y.PLUGIN_CONFIG_DATA_MODULE)]),t.loadConfiguredPlugins){const t=await e.getConfiguredPlugins();this.log.debug("loading configured: "+JSON.stringify(t,void 0,2));for(const i of t)this.load(i)}i.market.register(this,a.e,this.data)}async fetchPlugin(t,i,e,n){n&&this.ses.freezeForStrict();const s=await this.ses.makeSecureEnvironment(t+""+(e?"-"+e:""),i,n);if(s){return[s,s.compartment.globalThis.plugin]}return null}unload(t){var i;const e=t.id&&""!==t.id?t.id:"default",n={applicationKey:t.applicationKey,id:e},s=this.data.get(n);if(s){if(null===(i=s.module)||void 0===i?void 0:i.dispose)try{s.module.dispose()}catch(t){this.log.warn("An error occurred when disposing a plugin, it may be in a partially disposed state",t)}s.disposeEnv(),this.data.delete(n)}}async load(t){const{applicationKey:i,src:e,id:n,strict:s}=t,o=void 0===s||s,a=n||"default",l={applicationKey:i,id:a};if(this.data.get(l))return this.log.warn(`Plugin for ${i}-${a} already loaded.`),Promise.resolve();const[c,d]=await this.fetchPlugin(i,e,a,o)||[];c&&d&&this.initPlugin(c,d.factory,t)}async initPlugin(t,i,e){const n=i(),{applicationKey:o,id:a,config:l}=e;let c=()=>{};if(n.init){class BundleConnector{constructor(t,i){this.sdk=t,this.options=i}connect(){return this.sdk.connect(`${window.location.protocol}//${window.location.host}`,this.options)}cancelConnecting(){}}class BundleMessengerFactoryFetcher{getFactory(t){return t.messengerFactory}}const t=await s.tK.connect(new BundleConnector(this.sdk,{applicationKey:o}),new BundleMessengerFactoryFetcher,window);n.init(t,l),c=()=>t.disconnect()}const d={applicationKey:o,id:a};this.data.set(d,n,(()=>{t.dispose(),c()}))}dispose(){for(const[t,i]of this.data.plugins.entries())i.disposeEnv()}}}}]);